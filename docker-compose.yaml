#version: '3'
services:
  fastapi-app:
    build:
     context: .
    image: fastapi_app
    restart: unless-stopped
    working_dir: /code
    ports:
      - '8080:8000'
    stop_signal: SIGKILL
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    networks:
      - monitor-net

  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - '6379:6379'
    stop_signal: SIGKILL
    networks:
      - monitor-net

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - ./grafana/loki_config.yaml:/etc/loki/loki.yaml
    networks:
      - monitor-net
    restart: unless-stopped

  celery_worker:
    build:
      context: .
    image: fastapi_celery
    working_dir: /code/app
    restart: unless-stopped
    command: celery -A celery_tasks.run_celery worker -E --loglevel INFO
    depends_on:
      - redis
    links:
      - redis
    networks:
      - monitor-net

  prometheus:
    user: root
    build:
      context: prometheus
    image: prometheus
    ports:
      - '9090:9090'
    stop_signal: SIGKILL
    volumes:
      - prometheus_data:/prometheus
    depends_on:
      - fastapi-app
    networks:
      - monitor-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/default.yaml
#      - ./grafana/dashboard.yaml:/var/lib/grafana/dashboards/default.yaml
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - '3000:3000'
    stop_signal: SIGKILL
    restart: unless-stopped
    depends_on:
      - prometheus
      - loki
      - promtail
    networks:
      - monitor-net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./grafana/promtail_config.yaml:/etc/promtail/config.yml
    command:
      - -config.file=/etc/promtail/config.yml
#    privileged: true
    networks:
      - monitor-net

#  alloy:
#    volumes:
#      - './grafana/config.alloy:/etc/alloy/config.alloy'
#    ports:
#      - '12345:12345'
#    image: 'grafana/alloy:latest'
#    command: 'run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy'
#    networks:
#      - monitor-net

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=username
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=demo_org
      - DOCKER_INFLUXDB_INIT_BUCKET=demo_bucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=demo_token
    networks:
      - monitor-net
    restart: unless-stopped

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}