"""init migration

Revision ID: 4469e97087b7
Revises:
Create Date: 2025-06-09 16:12:18.766179

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4469e97087b7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("login", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("bot_id", sa.Integer(), nullable=True),
        sa.Column("bot_name", sa.String(length=50), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("login", name=op.f("uq_users_login")),
    )
    op.create_table(
        "current",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("acc_id", sa.Integer(), nullable=False),
        sa.Column("wind_extended", sa.Boolean(), nullable=False),
        sa.Column("pressure", sa.Boolean(), nullable=False),
        sa.Column("visibility", sa.Boolean(), nullable=False),
        sa.Column("humidity", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["acc_id"],
            ["users.id"],
            name=op.f("fk_current_acc_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_current")),
        sa.UniqueConstraint("acc_id", name=op.f("uq_current_acc_id")),
    )
    op.create_table(
        "daily",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("acc_id", sa.Integer(), nullable=False),
        sa.Column("astro", sa.Boolean(), nullable=False),
        sa.Column("visibility", sa.Boolean(), nullable=False),
        sa.Column("humidity", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["acc_id"],
            ["users.id"],
            name=op.f("fk_daily_acc_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_daily")),
        sa.UniqueConstraint("acc_id", name=op.f("uq_daily_acc_id")),
    )
    op.create_table(
        "favorites",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("acc_id", sa.Integer(), nullable=False),
        sa.Column("loc_id", sa.Integer(), nullable=False),
        sa.Column("loc_name", sa.String(length=100), nullable=False),
        sa.Column("loc_region", sa.String(length=100), nullable=False),
        sa.Column("loc_country", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["acc_id"],
            ["users.id"],
            name=op.f("fk_favorites_acc_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_favorites")),
        sa.UniqueConstraint("acc_id", name=op.f("uq_favorites_acc_id")),
    )
    op.create_table(
        "hourly",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("acc_id", sa.Integer(), nullable=False),
        sa.Column("wind_extended", sa.Boolean(), nullable=False),
        sa.Column("pressure", sa.Boolean(), nullable=False),
        sa.Column("visibility", sa.Boolean(), nullable=False),
        sa.Column("humidity", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["acc_id"],
            ["users.id"],
            name=op.f("fk_hourly_acc_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_hourly")),
        sa.UniqueConstraint("acc_id", name=op.f("uq_hourly_acc_id")),
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("acc_id", sa.Integer(), nullable=False),
        sa.Column("current", sa.Boolean(), nullable=False),
        sa.Column("daily", sa.Integer(), nullable=False),
        sa.Column("hourly", sa.Integer(), nullable=False),
        sa.Column("units", sa.String(), server_default="F", nullable=False),
        sa.Column("dark_theme", sa.Boolean(), server_default="False", nullable=False),
        sa.Column(
            "notifications",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default="{}",
            nullable=True,
        ),
        sa.Column("alerts", sa.Boolean(), server_default="False", nullable=False),
        sa.ForeignKeyConstraint(
            ["acc_id"],
            ["users.id"],
            name=op.f("fk_settings_acc_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_settings")),
        sa.UniqueConstraint("acc_id", name=op.f("uq_settings_acc_id")),
    )
    op.create_table(
        "wishlist",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("acc_id", sa.Integer(), nullable=False),
        sa.Column("loc_id", sa.Integer(), nullable=False),
        sa.Column("loc_name", sa.String(length=100), nullable=False),
        sa.Column("loc_region", sa.String(length=100), nullable=False),
        sa.Column("loc_country", sa.String(length=100), nullable=False),
        sa.ForeignKeyConstraint(
            ["acc_id"],
            ["users.id"],
            name=op.f("fk_wishlist_acc_id_users"),
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_wishlist")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("wishlist")
    op.drop_table("settings")
    op.drop_table("hourly")
    op.drop_table("favorites")
    op.drop_table("daily")
    op.drop_table("current")
    op.drop_table("users")
    # ### end Alembic commands ###
