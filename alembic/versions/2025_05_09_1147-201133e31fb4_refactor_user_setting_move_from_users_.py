"""Refactor user setting - move from users to usersettings

Revision ID: 201133e31fb4
Revises: 82f55828de78
Create Date: 2025-05-09 11:47:40.061241

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '201133e31fb4'
down_revision: Union[str, None] = '82f55828de78'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('settings', sa.Column('dark_theme', sa.Boolean(), server_default='False', nullable=False))
    op.add_column('settings', sa.Column('notifications', postgresql.JSONB(astext_type=sa.Text()), server_default='{}', nullable=True))
    op.add_column('settings', sa.Column('alerts', sa.Boolean(), server_default='False', nullable=False))
    op.drop_column('users', 'dark_theme')
    op.drop_column('users', 'alert')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('alert', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('dark_theme', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
    op.drop_column('settings', 'alerts')
    op.drop_column('settings', 'notifications')
    op.drop_column('settings', 'dark_theme')
    # ### end Alembic commands ###
